# Publishes built jars to distribution platforms
name: Publish

on:
  workflow_dispatch:
    inputs:
      mod_platform:
        description: 'Mod platform'
        type: choice
        default: 'CurseForge and Modrinth'
        options:
          - 'CurseForge and Modrinth'
          - 'CurseForge'
          - 'Modrinth'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: "${{ github.ref_name }}"
      NAME: "BetterLineBreak"
      MODRINTH_ID: "zp6DtFf2"
      CURSEFORGE_ID: "960082"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 #これが無いと正しくタグの存在を判定できない模様

      - name: 環境変数の動的定義
        run: |
          echo "MC_VERSION=${{ env.BRANCH_NAME }}" | sed "s/\/.*//" >> $GITHUB_ENV
          echo "MOD_LOADER=${{ env.BRANCH_NAME }}" | sed "s/=.*\//=/" >> $GITHUB_ENV
          cat "CHANGELOG.md" | tr -d '\r\n' | sed -r "s/[^-]*-([^]]*).*/RELEASE_VERSION=\1/"  >> $GITHUB_ENV

      - name: 環境変数の動的定義2
        run: |
          echo "TAG_NAME=${{ env.MC_VERSION }}-${{ env.MOD_LOADER }}-${{ env.RELEASE_VERSION }}" >> $GITHUB_ENV

      - name: modの依存関係の動的定義
        run: |
          echo "CURSEFORGE_DEPENDENCIES=${{ env.MOD_LOADER == 'fabric' && (startsWith(env.MC_VERSION, '1.14.') && 'cloth-config(required)\nmodmenu(required)\nauto-config-updated-api(required)' || 'cloth-config(required)\nmodmenu(required)') || '' }}" >> $GITHUB_ENV
          echo "MODRINTH_DEPENDENCIES=${{ env.MOD_LOADER == 'fabric' && 'cloth-config(required)\nmodmenu(required)' || '' }}" >> $GITHUB_ENV

      - name: CHANGELOGの中身保存
        id: changelog
        run: |
          {
            echo 'CHANGELOG<<EOF'
            cat "CHANGELOG.md" | tr -d '\r\n' | awk 'BEGIN{FS="###"}{printf $2}' | sed -r -e "s/ \[[^)]*\) - ....-..-..//" -e "s/\.- /.\n- /g"
            echo -e "\nEOF"
          } >> $GITHUB_OUTPUT

      - name: Check properties
        run: |
          echo "MC_VERSION" "${{ env.MC_VERSION }}"
          echo "MOD_LOADER" "${{ env.MOD_LOADER }}"
          echo "RELEASE_VERSION" "${{ env.RELEASE_VERSION }}"
          echo "TAG_NAME" "${{ env.TAG_NAME }}"
          echo "CHANGELOG" "${{ steps.changelog.outputs.CHANGELOG }}"
          echo "CURSEFORGE_DEPENDENCIES" "${{ env.CURSEFORGE_DEPENDENCIES }}"
          echo "MODRINTH_DEPENDENCIES" "${{ env.MODRINTH_DEPENDENCIES }}"
          if [[ "${{ env.MC_VERSION }}" != *"."* ]]; then
            echo 'Invalid MC version "${{ env.MC_VERSION }}", aborting workflow.'
            exit 1
          fi
          if [ "${{ env.MOD_LOADER }}" != "forge" ] && [ "${{ env.MOD_LOADER }}" != "fabric" ]; then
            echo 'Invalid mod loader "${{ env.MOD_LOADER }}", aborting workflow.'
            exit 1
          fi
          if [ -z "${{ env.RELEASE_VERSION }}" ]; then
            echo 'Invalid release version "${{ env.RELEASE_VERSION }}", aborting workflow.'
            exit 1
          fi

      - name: Check if tag already exists
        run: |
          if git rev-parse --verify --quiet "${{ env.TAG_NAME }}"; then
            echo "Tag ${{ env.TAG_NAME }} already exists, aborting workflow."
            exit 1
          fi

      # gradle.propertiesの書き換えはしないかも
      #      - name: Set version
      #        run: sed -i "s/modVersion.*=.*/modVersion = ${{ env.RELEASE_VERSION }}/g" gradle.properties

      # 自動コミットはしないかも
      #      - name: Commit and push gradle.properties
      #        uses: stefanzweifel/git-auto-commit-action@v5
      #        with:
      #          commit_message: "Bump version to v${{ env.RELEASE_VERSION }}"
      #          commit_options: '--no-verify'
      #          file_pattern: gradle.properties
      #          tagging_message: "v${{ env.RELEASE_VERSION }}"

      - name: Setup Build
        uses: ./.github/actions/build_setup

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Project
        run: ./gradlew --scan --build-cache --info --stacktrace build

      - name: Publish to Curseforge and Modrinth
        uses: Kir-Antipov/mc-publish@v3.3
        if: ${{ github.event.inputs.mod_platform == 'CurseForge and Modrinth' }}
        with:
          github-tag: "${{ env.TAG_NAME }}"
          github-generate-changelog: false
          github-draft: false
          github-prerelease: false
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          modrinth-id: "${{ env.MODRINTH_ID }}"
          modrinth-token: "${{ secrets.MODRINTH_API_KEY }}"
          modrinth-dependencies: "${{ env.MODRINTH_DEPENDENCIES }}"
          curseforge-id: "${{ env.CURSEFORGE_ID }}"
          curseforge-token: "${{ secrets.CURSEFORGE_API_KEY }}"
          curseforge-dependencies: "${{ env.CURSEFORGE_DEPENDENCIES }}"
          files: |
            build/libs/!(*-@(dev|sources|javadoc)).jar
            build/libs/*-@(sources).jar
          name: "${{ env.NAME }}-${{ env.MC_VERSION }}(${{ env.MOD_LOADER == 'forge' && 'Forge' || 'Fabric' }})-${{ env.RELEASE_VERSION }}"
          changelog: "${{ steps.changelog.outputs.CHANGELOG }}"
          version: "${{ env.MC_VERSION }}"
          version-type: "release"
          loaders: "${{ env.MOD_LOADER }}"
          game-versions: "${{ env.MC_VERSION }}"
          java: "${{ startsWith(env.MC_VERSION, '1.16.') && '16\n17\n18' || (startsWith(env.MC_VERSION, '1.17.') || startsWith(env.MC_VERSION, '1.18.') || startsWith(env.MC_VERSION, '1.19.') || startsWith(env.MC_VERSION, '1.20.')) && '17\n18' || '8' }}"
          retry-attempts: 2

      - name: Publish only to Curseforge
        uses: Kir-Antipov/mc-publish@v3.3
        if: ${{ github.event.inputs.mod_platform == 'CurseForge' }}
        with:
          github-tag: "${{ env.TAG_NAME }}"
          github-generate-changelog: false
          github-draft: false
          github-prerelease: false
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          curseforge-id: "${{ env.CURSEFORGE_ID }}"
          curseforge-token: "${{ secrets.CURSEFORGE_API_KEY }}"
          curseforge-dependencies: "${{ env.CURSEFORGE_DEPENDENCIES }}"
          files: |
            build/libs/!(*-@(dev|sources|javadoc)).jar
            build/libs/*-@(sources).jar
          name: "${{ env.NAME }}-${{ env.MC_VERSION }}(${{ env.MOD_LOADER == 'forge' && 'Forge' || 'Fabric' }})-${{ env.RELEASE_VERSION }}"
          changelog: "${{ steps.changelog.outputs.CHANGELOG }}"
          version: "${{ env.MC_VERSION }}"
          version-type: "release"
          loaders: "${{ env.MOD_LOADER }}"
          game-versions: "${{ env.MC_VERSION }}"
          java: "${{ startsWith(env.MC_VERSION, '1.16.') && '16\n17\n18' || (startsWith(env.MC_VERSION, '1.17.') || startsWith(env.MC_VERSION, '1.18.') || startsWith(env.MC_VERSION, '1.19.') || startsWith(env.MC_VERSION, '1.20.')) && '17\n18' || '8' }}"
          retry-attempts: 2

      - name: Publish only to Modrinth
        uses: Kir-Antipov/mc-publish@v3.3
        if: ${{ github.event.inputs.mod_platform == 'Modrinth' }}
        with:
          github-tag: "${{ env.TAG_NAME }}"
          github-generate-changelog: false
          github-draft: false
          github-prerelease: false
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          modrinth-id: "${{ env.MODRINTH_ID }}"
          modrinth-token: "${{ secrets.MODRINTH_API_KEY }}"
          modrinth-dependencies: "${{ env.MODRINTH_DEPENDENCIES }}"
          files: |
            build/libs/!(*-@(dev|sources|javadoc)).jar
            build/libs/*-@(sources).jar
          name: "${{ env.NAME }}-${{ env.MC_VERSION }}(${{ env.MOD_LOADER == 'forge' && 'Forge' || 'Fabric' }})-${{ env.RELEASE_VERSION }}"
          changelog: "${{ steps.changelog.outputs.CHANGELOG }}"
          version: "${{ env.MC_VERSION }}"
          version-type: "release"
          loaders: "${{ env.MOD_LOADER }}"
          game-versions: "${{ env.MC_VERSION }}"
          java: "${{ startsWith(env.MC_VERSION, '1.16.') && '16\n17\n18' || (startsWith(env.MC_VERSION, '1.17.') || startsWith(env.MC_VERSION, '1.18.') || startsWith(env.MC_VERSION, '1.19.') || startsWith(env.MC_VERSION, '1.20.')) && '17\n18' || '8' }}"
          retry-attempts: 2
